# Generated by Django 4.2.1 on 2024-10-02 08:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Phone number must be 11 digits.', regex='^\\d{11}$')])),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('COMPANY', 'Company'), ('CANDIDATE', 'Candidate')], default='CANDIDATE', max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('industry', models.CharField(max_length=255)),
                ('company_size', models.PositiveSmallIntegerField(choices=[(1, '1-5'), (2, '6-10'), (3, '11-50'), (4, '51-200'), (5, '201-500'), (6, '501+')])),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('location', models.CharField(max_length=255)),
                ('images', models.JSONField(default=list)),
                ('job_titles', models.JSONField(default=list)),
                ('qualifications', models.JSONField(default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.CharField(max_length=255)),
                ('skills', models.JSONField(default=list)),
                ('experience', models.JSONField(default=list)),
                ('preferred_locations', models.JSONField(default=list)),
                ('establishment_name', models.CharField(max_length=255)),
                ('field_of_study', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('degree_start_date', models.DateField(default='2023-01-01')),
                ('degree_end_date', models.DateField(default='2023-01-01')),
                ('languages', models.JSONField(default=list)),
                ('hobbies', models.JSONField(default=list)),
                ('interests', models.JSONField(default=list)),
                ('city', models.CharField(default='Not specified', max_length=255)),
                ('github_url', models.URLField(blank=True, default='', null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(default='')),
                ('images', models.JSONField(default=list)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
